import fs from 'fs';
import util from 'util';
import camelCase from 'camelcase';
import { GearDefinition } from '../models/gear_definition';

const writeFile = util.promisify(fs.writeFile);

/**
 * Writes a TypeScript gear definition to a *.dart file
 * that will instantiate a Dart version of the gear definition
 * when the Flutter app is run.
 *
 * @param gearDefinition The gear definition to write
 * @returns A Dart "export" statement to this file that should
 * be included in the main `gears.dart` proxy export file.
 */
export const writeGearDefinitionAsDartFile = async (
  gearDefinition: GearDefinition,
  filePath: string,
): Promise<string> => {
  const contents: string[] = [];

  contents.push(`// THIS FILE IS AUTO-GENERATED
// ---------------------------
//
// Do not edit by hand.
//
// This file is generated by the Node application
// in the \`gear_generator\` directory.`);

  contents.push('');

  contents.push("import 'dart:ui';");
  contents.push("import 'package:inspiral/models/contact_point.dart';");
  contents.push("import 'package:inspiral/models/gear_definition.dart';");

  contents.push('');

  contents.push(
    `final ${camelCase(gearDefinition.gearName)} = GearDefinition(`,
  );
  contents.push(`    image: '${gearDefinition.image}',`);
  contents.push(
    `    size: Size(${gearDefinition.size.width}, ${gearDefinition.size.height}),`,
  );
  contents.push(`    toothCount: ${gearDefinition.toothCount},`);
  contents.push(`    points: [`);

  for (const point of gearDefinition.points) {
    contents.push(`      ContactPoint(`);
    contents.push(
      `          position: Offset(${point.position.x}, ${point.position.y}),`,
    );
    contents.push(`          direction: ${point.direction}),`);
  }

  contents.push(`    ]);`);

  contents.push('');

  await writeFile(filePath, contents.join('\n'));

  return `export 'package:inspiral/models/gears/${gearDefinition.gearName}.dart';`;
};
